{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "minLength": 1
    },
    "deployDt": {
      "type": "string",
      "defaultValue": "[utcNow('MMdd')]"
    },
    "EnvName": {
      "type": "string",
      "defaultValue": "Cloud"
    },
    "FavoriteColor": {
      "type": "string",
      "defaultValue": "lightgray"
    },
    "principalId": {
      "type": "string",
      "metadata": {
        "description": "KeyVault Owner SID"
      }
    },
    "slots": {
      "type": "array",
      "defaultValue": [
        "STAGING"
      ]
    },
    "skuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "S1"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    },
    "sqldbmsAdminLogin": {
      "type": "string",
      "minLength": 1
    },
    "sqldbmsAdminLoginPassword": {
      "type": "securestring"
    },
    "sqldbCollation": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "sqldbEdition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "sqldbRequestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "appstoreType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "uniqueAppName": "[concat(parameters('appName'),parameters('deployDt'))]",
    "keyvaultName": "[concat(variables('uniqueAppName'),'-kv')]",
    "hostingPlanName": "[concat(variables('uniqueAppName'),'-plan')]",
    "webSiteName": "[concat(variables('uniqueAppName'))]",
    "appstoreName": "[toLower(concat(variables('uniqueAppName'),'store'))]",
    "dashboardName": "[concat(variables('uniqueAppName'),'-Dashboard')]",
    "sqldbmsName": "[concat(variables('uniqueAppName'),'-dbms')]",
    "sqldbName": "[concat(variables('uniqueAppName'),'-db')]",
    "cosmosName": "[concat(variables('uniqueAppName'),'-cosmos')]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyvaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('principalId')]",
            "permissions": {
              "keys": [ "All" ],
              "secrets": [ "All" ]
            }
          },
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(concat(resourceId('Microsoft.Web/sites/', variables('uniqueAppName')),'/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
            "permissions": {
              "secrets": [
                "Get",
                "List"
              ],
              "certificates": [
                "Get"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyvaultName'),'/myMessage')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[concat('Hello from KeyVault - ', variables('keyvaultName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyvaultName'),'/myDataContext')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[concat('Server=tcp:',variables('sqldbmsName'),'.database.windows.net,1433;Initial Catalog=',variables('sqldbName'),';Persist Security Info=False;User ID=',parameters('sqldbmsAdminLogin'),';Password=',parameters('sqldbmsAdminLoginPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqldbmsName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyvaultName'),'/myCosmos')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[concat('AccountEndpoint=https://',variables('cosmosName'),'.documents.azure.com:443/;AccountKey=',listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosName')), '2015-11-06').primaryMasterKey)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]",
        "[resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyvaultName'),'/myStorage')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "contentType": "text/plain",
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('appstoreName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('appstoreName')), '2016-01-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('appStoreName'))]"
      ]
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "kind": "linux",
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "reserved": true
      }
    },
    {
      "apiVersion": "2018-02-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "Website"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      ],
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "connectionStrings": [
            {
              "name": "myDataContext",
              "type": "SQLAzure",
              "connectionString": "[concat('@Microsoft.KeyVault(SecretUri=https://',variables('keyvaultName'),'.vault.azure.net/secrets/myDataContext/)')]"
            },
            {
              "name": "myCosmos",
              "type": "Custom",
              "connectionString": "[concat('@Microsoft.KeyVault(SecretUri=https://',variables('keyvaultName'),'.vault.azure.net/secrets/myCosmos/)')]"
            },
            {
              "name": "myStorage",
              "type": "Custom",
              "connectionString": "[concat('@Microsoft.KeyVault(SecretUri=https://',variables('keyvaultName'),'.vault.azure.net/secrets/myStorage/)')]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
          ],
          "tags": {
            "displayName": "config"
          },
          "properties": {
            "myEnvName": "[parameters('EnvName')]",
            "myFavoriteColor": "[parameters('FavoriteColor')]",
            "myMessage" : "[concat('@Microsoft.KeyVault(SecretUri=https://',variables('keyvaultName'),'.vault.azure.net/secrets/myMessage/)')]"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "slotconfignames",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]"
          ],
          "properties": {
            "appSettingNames": [ "EnvName" ]
          }
        }
      ]
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(variables('webSiteName'), '/', parameters('slots')[copyIndex()])]",
      "kind": "app",
      "location": "[resourceGroup().location]",
      "comments": "This specifies the web app slots.",
      "tags": {
        "displayName": "WebAppSlots"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "connectionStrings": [
            {
              "name": "myDataContext",
              "type": "SQLAzure",
              "connectionString": "[concat('@Microsoft.KeyVault(SecretUri=https://',variables('keyvaultName'),'.vault.azure.net/secrets/myDataContext/)')]"
            },
            {
              "name": "myCosmos",
              "type": "Custom",
              "connectionString": "[concat('@Microsoft.KeyVault(SecretUri=https://',variables('keyvaultName'),'.vault.azure.net/secrets/myCosmos/)')]"
            },
            {
              "name": "myStorage",
              "type": "Custom",
              "connectionString": "[concat('@Microsoft.KeyVault(SecretUri=https://',variables('keyvaultName'),'.vault.azure.net/secrets/myStorage/)')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]"
      ],
      "resources": [
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat(resourceId('Microsoft.Web/sites', variables('webSiteName')),'/slots/',parameters('slots')[copyIndex()])]"
          ],
          "tags": {
            "displayName": "[concat('config-',parameters('slots')[copyIndex()])]"
          },
          "properties": {
            "myEnvName": "[parameters('slots')[copyIndex()]]",
            "myFavoriteColor": "\"lightblue\".",
            "myMessage": "[concat('@Microsoft.KeyVault(SecretUri=https://',variables('keyvaultName'),'.vault.azure.net/secrets/myMessage/)')]"

          }
        }
      ],
      "copy": {
        "name": "webPortalSlot",
        "count": "[length(parameters('slots'))]"
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
      "type": "Microsoft.Insights/autoscalesettings",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "AutoScaleSettings"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      ],
      "properties": {
        "profiles": [
          {
            "name": "Default",
            "capacity": {
              "minimum": 1,
              "maximum": 2,
              "default": 1
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 80.0
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT1H",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 60.0
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT1H"
                }
              }
            ]
          }
        ],
        "enabled": false,
        "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
        "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      }
    },
    {
      "apiVersion": "2014-04-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Insights/components",
      "location": "East US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/', variables('webSiteName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
        "displayName": "AppInsightsComponent"
      },
      "properties": {
        "applicationId": "[variables('webSiteName')]"
      }
    },
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "name": "[variables('cosmosName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('uniqueAppName')]",
        "databaseAccountOfferType": "Standard"
      }
    },
    {
      "name": "[variables('sqldbmsName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "sqldbms"
      },
      "properties": {
        "administratorLogin": "[parameters('sqldbmsAdminLogin')]",
        "administratorLoginPassword": "[parameters('sqldbmsAdminLoginPassword')]"
      },
      "resources": [
        {
          "name": "AllowAllWindowsAzureIps",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqldbmsName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[variables('sqldbName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqldbmsName'))]"
          ],
          "tags": {
            "displayName": "sqldb"
          },
          "properties": {
            "collation": "[parameters('sqldbCollation')]",
            "edition": "[parameters('sqldbEdition')]",
            "maxSizeBytes": "1073741824",
            "requestedServiceObjectiveName": "[parameters('sqldbRequestedServiceObjectiveName')]"
          }
        }
      ]
    },
    {
      "name": "[variables('appstoreName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('appstoreType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "appstore"
      },
      "kind": "Storage"
    }
  ]
}
